name: 'Latest'

on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
    services:
      zookeeper:
        image: zookeeper:3.8
        ports:
          - 2181:2181
      solr:
        image: solr:8
        ports:
          - 8983:8983
        env:
          ZK_HOST: zookeeper:2181
        options: -e cloud
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.5'
          check-latest: true
      - name: Install siegfried
        run: |
          go install github.com/richardlehane/siegfried/cmd/sf@latest
          sf -update
      - name: Install clamdscan mock
        run: |
          sudo cp .github/workflows/bin/clamscan /usr/bin/clamscan
          sudo cp .github/workflows/bin/clamscan /usr/bin/clamdscan
          sudo chmod a+rx /usr/bin/clamscan /usr/bin/clamdscan
      - name: Run tests & install
        run:
          mvn $MAVEN_CLI_OPTS -Dtestng.groups="travis" -Proda-wui-docker -Denforcer.skip=true clean org.jacoco:jacoco-maven-plugin:prepare-agent install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to GitHub packages
        run: mvn $MAVEN_CLI_OPTS clean deploy -Dmaven.test.skip=true -Pcore
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Deploy to DockerHub
        run: |
          docker push keeps/roda:latest
      - name: Trigger KEEPS GitLab CI/CD
        run: |
          curl --progress-bar -o /dev/null -L --request POST \
               --form ref=master \
               --form token=${{ secrets.GITLAB_RODA_DEV_TRIGGER_TOKEN }} \
               --form "variables[DOCKER_TAG]=latest" \
               ${{ secrets.GITLAB_RODA_DEV_TRIGGER }}
