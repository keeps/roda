##################### RODA Core configuration file #######################
#                                                                        #
# This file contains all the configurations and settings of RODA CORE.   #
# Settings are very broad and range from the configuration of            #
# external authentication systems to some internal plugin configurations.#
#                                                                        #
# In most cases, commented lines represent the default values that are   #
# being used. To change the behaviour, uncomment the line and set its    #
# property value.                                                        #
#                                                                        #
# More details are given bellow closer to each section                   #
#                                                                        #
# NOTE: Be sure to edit this file in UTF-8 encoding                      #
#                                                                        #
##########################################################################


##########################################################################
# LDAP settings
#
# Usage:
#
# * backend: LDIF | JDBM | MAVIBOT (details at http://directory.apache.org/apacheds/advanced-ug/1.5-backend.html)
# * cacheSize: size of cached entries (-1 is no cache, not all backends support cache, check https://cwiki.apache.org/confluence/display/DIRxSRVx10/Performance+Tuning)
#
# Status: in use
##########################################################################
core.ldap.backend=JDBM
core.ldap.cacheSize=100

core.ldap.startServer = false
core.ldap.port = 10389
core.ldap.adminDN = uid=admin,ou=system
core.ldap.adminPassword = roda
core.ldap.passwordDigestAlgorithm = PKCS5S2
core.ldap.baseDN = dc=roda,dc=org
core.ldap.peopleDN = ou=users,dc=roda,dc=org
core.ldap.groupsDN = ou=groups,dc=roda,dc=org
core.ldap.rolesDN = ou=roles,dc=roda,dc=org
core.ldap.rodaGuestDN = uid=guest,ou=users,dc=roda,dc=org
core.ldap.rodaAdminDN = uid=admin,ou=users,dc=roda,dc=org
core.ldap.rodaAdministratorsDN = cn=administrators,ou=groups,dc=roda,dc=org

# These are the names of the users and groups that will be blocked
# in the UI, i.e. the user cannot change these users/groups as
# their are required for the repository to work.

#core.ldap.protectedUsers = admin
core.ldap.protectedUsers = guest
core.ldap.protectedGroups = administrators
#core.ldap.protectedGroups = archivists
#core.ldap.protectedGroups = producers
core.ldap.protectedGroups = users
core.ldap.protectedGroups = guests

##########################################################################
# Auth settings
#
# Usage:
# Control to disable authentication via interface or API, forcing authentication to another service,
# Allowed users can be added to a whitelist list
# Status: in use
##########################################################################
core.web.basicAuth.disable = false
core.web.basicAuth.whitelist[] = admin
core.api.basicAuth.disable = false
core.api.basicAuth.whitelist[] = admin

##########################################################################
# Storage settings
#
# Usage:
#
# * type: FILESYSTEM
# * filesystem.trash: name of the folder, relative to RODA_HOME/data/, where trash should be put on
# Status: in use
##########################################################################
core.storage.type=FILESYSTEM
#core.storage.filesystem.trash = trash

##########################################################################
# Apache Solr settings
#
# Usage:
#
# * type: CLOUD
#
# Status: in use
##########################################################################
core.solr.type=CLOUD
core.solr.cloud.urls=localhost:2181
core.solr.cloud.connect.timeout_ms=60000
core.solr.cloud.healthcheck.retries=100
core.solr.cloud.healthcheck.timeout_ms=10000

# Stemming and stopwords configuration for "*_txt" fields
# When missing or blank Solr uses the "text_general" type for "*_txt"
# Available languages (from index/common/conf/managed_schema):
#   ar - Arabic,      bg - Bulgarian,    ca - Catalan,    cz - Czech,        da - Danish,    de - German,    el - Greek
#   es - Spanish,     eu - Basque,       fa - Persian,    fi - Finnish,      fr - French,    ga - Irish,     gl - Galician
#   hi - Hindi,       hu - Hungarian,    hy - Armenian,   id - Indonesian,   it - Italian,   lv - Latvian,   nl - Dutch
#   no - Norwegian,   pt - Portuguese,   ro - Romanian,   ru - Russian,      sv - Swedish,   th - Thai,      tr - Turkish
#   ja - Japanese (using morphological analysis)
#   cjk - CJK bigram (Chinese, Japanese, and Korean languages)
#core.solr.stemming.language=en

##########################################################################
# Orchestrator (plug-in/task parallelism orchestrator)
#
# Usage (prefix core.orchestrator):
#
# * type: AKKA
# * max_jobs_in_parallel: positive number of max jobs in parallel,
#     defaulting to the amount of processors (cpu) plus one
#
# * nr_of_jobs_workers: positive number of jobs workers, defaulting
#     to the amount of processors (cpu) plus one
#
# * nr_of_limited_jobs_workers: positive number of jobs workers
#     for the limited parallelism option, defaulting to 1
#
# * start_jobs_in_state_created: if true, during startup jobs that are
#     in the state 'created' are started, false otherwise
#
# * block_size: the amount of objects given to each worker
#
# * block_size.PLUGIN_FULL_CLASS_NAME: the amount of objects given 
#     to each worker when plugin is PLUGIN_FULL_CLASS_NAME
#
# * sync_timeout: number of seconds for timeout in
#      a sync job execution
#
# * non_parallelizable_plugins: list of plugins that cannot be run in
#      parallel, i.e., in one moment in time only one of the plugins
#      in this list will be running
#
# * lock_request_timeout: number of seconds for a lock request to timeout
#
# * lock_timeout: number of seconds for a lock to timeout
#
# * internal_jobs_priority: Priority to be used on jobs with plugins that run
#      internally, defaulting to MEDIUM priority. Possible values:
#      [HIGH | MEDIUM | LOW]
#
# * internal_jobs_parallelism: NORMAL for the process to run in the higher
#      amount of actors or LIMITED to run in a small set of actors,
#      defaulting to NORMAL parallelism. Possible values: [NORMAL | LIMITED]
#
# Status: in use (but not all)
##########################################################################
core.orchestrator.type=AKKA

#core.orchestrator.type=AKKA_DISTRIBUTED
core.orchestrator.max_jobs_in_parallel = 8
core.orchestrator.max_limited_jobs_in_parallel = 2
core.orchestrator.nr_of_jobs_workers = 8
core.orchestrator.nr_of_limited_jobs_workers = 2
#core.orchestrator.start_jobs_in_state_created = true
#core.orchestrator.block_size = 100
#core.orchestrator.sync_timeout = 600
core.orchestrator.non_parallelizable_plugins = org.roda.core.plugins.base.maintenance.MovePlugin
core.orchestrator.non_parallelizable_plugins = org.roda.core.plugins.base.maintenance.DeleteRODAObjectPlugin
#core.orchestrator.non_parallelizable_plugins = org.roda.core.plugins.base.ingest.v2.ConfigurableIngestPlugin
#core.orchestrator.non_parallelizable_plugins = org.roda.core.plugins.base.ingest.v2.MinimalIngestPlugin
#core.orchestrator.lock_request_timeout = 600
#core.orchestrator.lock_timeout = 600
#core.orchestrator.internal_jobs_priority = MEDIUM
#core.orchestrator.internal_jobs_parallelism = NORMAL

##########################################################################
# Events settings (e.g. for multi-instance scenarios)
#
# Usage (prefix core.events):
#
# * enabled: true | false
# * notifier_and_handler_are_the_same: if the same class implements both
#      the notifier & handler and therefore should only be instantiated 
#      once, set this to true, set to false otherwise
# * notifier_class: class that implements the notifying logic
# * handler_class: class that implements the handling logic
# * akka.writeConsistency: the desired write consistency (WriteMajority | WriteAll)
# * akka.writeConsistencyTimeoutInSeconds: the amount of seconds for a write to 
#      timeout, which doesn't mean that the write will not eventually get to the
#      other nodes (https://doc.akka.io/docs/akka/2.5/distributed-data.html)
#
# Status: in use
##########################################################################
core.events.enabled = false
core.events.notifier_and_handler_are_the_same = true
core.events.notifier_class = org.roda.core.events.akka.AkkaEventsHandlerAndNotifier
#core.events.handler_class =
core.events.akka.writeConsistency = WriteMajority
core.events.akka.writeConsistencyTimeoutInSeconds = 3


##########################################################################
# Ingest workflow settings
#
# Usage:
#
# * sip2aip.create_submission: true | false (default false)
#		set to true if you want to preserve the original SIP inside each AIP
#
# * processed.move_when_autoaccept: true | false (default: false)
# 		to control whether sips should be moved automatically after autoaccept
#
# * delete_transfer_resource_after_successfully_ingested: true | false (default: false)
#        to control whether sips should be deleted after a successful ingest workflow
#
# * algorithms: MD5 | SHA-1 | SHA-256 | +
#		algorithms that will be used to calculate a checksum of each file
#
# Status: in use
##########################################################################
#core.ingest.sip2aip.create_submission=false
#core.ingest.processed.move_when_autoaccept = false
#core.ingest.processed.base_folder=PROCESSED
#core.ingest.processed.successfully_ingested=SUCCESSFULLY_INGESTED
#core.ingest.processed.unsuccessfully_ingested=UNSUCCESSFULLY_INGESTED
#core.ingest.delete_transfer_resource_after_successfully_ingested=false

# Check your Java implementation to know which algorithms are supported
# https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#MessageDigest
core.premis.fixity.algorithms = MD5
core.premis.fixity.algorithms = SHA-1
core.premis.fixity.algorithms = SHA-256

##########################################################################
# Transferred resources settings
#
# This is the folder that contains all the SIPs that are ready to be
# ingested
#
# Files placed here will show up on the Ingest/Transfer menu
#
# Status: in use
##########################################################################
transferredResources.folder = transferred-resources

##########################################################################
# Email settings
#
# Status: in use
##########################################################################
#core.email.from = from@roda-community.org
#core.email.user = from@roda-community.org
#core.email.password = smtp_password
#core.email.protocol = smtps
#core.email.host = smtp.roda-community.org
#core.email.port = 465
#core.email.auth = true
#core.email.starttls.enable = true

# Add extra property names here
#core.email.properties = x
#core.email.x = y


##########################################################################
# Notifications settings
##########################################################################
core.notification.acknowledge = http://localhost:8080/#acknowledge/{notificationId}/{token}
core.notification.template_path = mail/templates/
core.notification.ingest_subject = RODA ingest process finished - {RESULT}
core.notification.default_subject = RODA process finished - {RESULT}
core.notification.package = org.roda.core.plugins.base.notifications

# parameter.notification.EmailGenericException.enable = true
# parameter.notification.EmailGenericException.to = test@roda.com

##########################################################################
# Full text search settings
#
# Usage:
#
# * fulltext_threshold_in_bytes: <Integer>
#		max file size to be indexed as full-text
#
# Status: in use
##########################################################################
#core.index.fulltext_threshold_in_bytes = 104857600

##########################################################################
# Plug-in/Tasks general settings
#
# Status: in use
##########################################################################
core.plugins.internal.package = org.roda.core.plugins.base
core.plugins.internal.take_precedence_over_external = true
core.plugins.external.scheduler.interval = 30

#core.plugins.blacklist = org.roda.core.plugins.base.ingest.v2.MinimalIngestPlugin
#core.plugins.blacklist = org.roda.core.plugins.base.ingest.v2.ConfigurableIngestPlugin
#core.plugins.blacklist = org.roda.core.plugins.base.ingest.BagitToAIPPlugin
#core.plugins.blacklist = org.roda.core.plugins.base.ingest.EARKSIPToAIPPlugin
#core.plugins.blacklist = org.roda.core.plugins.base.ingest.TransferredResourceToAIPPlugin
core.plugins.blacklist = org.roda.core.plugins.base.PluginThatFailsDuringInit

##########################################################################
# Anti-virus plugin settings
#
# Status: in use
##########################################################################
core.plugins.internal.virus_check.antiVirusClassname = org.roda.core.plugins.base.antivirus.ClamAntiVirus

## antivirus server mode
core.plugins.internal.virus_check.clamav.bin = /usr/bin/clamdscan
core.plugins.internal.virus_check.clamav.params = -m --stream
core.plugins.internal.virus_check.clamav.get_version = clamdscan --version

#core.plugins.internal.virus_check.antiVirusClassname = org.roda.core.plugins.base.antivirus.AVGAntiVirus
#core.plugins.internal.virus_check.avg.bin = /usr/bin/avgscan
#core.plugins.internal.virus_check.avg.params = -repok -arc
#core.plugins.internal.virus_check.avg.get_version = /usr/bin/avgscan --version

##########################################################################
# Plug-in/task commands and tool settings
# 
# core.tools.siegfried.mode = server | standalone
# Status: in use
##########################################################################
core.tools.siegfried.mode = ${env:SIEGFRIED_MODE}
core.tools.siegfried.server = ${env:SIEGFRIED_SERVER_URL}

#core.tools.siegfried.mode = server

# Alternative standalone mode (not recommended)
#core.tools.siegfried.mode = standalone
#core.tools.siegfried.binary = sf


##########################################################################
# Conversion plugins settings
#
# Status: in use
##########################################################################
core.tools.convert.allplugins.hasPartialSuccessOnOutcome = True

##########################################################################
# Working/temporary directory settings
#
# Status: in use
##########################################################################

# core.workingdirectory = /tmp/rodaWD

##########################################################################
# Notification settings
#
# This settings aim to send an report via HTTP of the ingest process
#
# Usage: Endpoint HTTP to send the report and the associated timeout
#
# Status: in use
##########################################################################

# ingest.configurable.http_endpoint = http://www.example.com
# ingest.http_notification.timeout = 10000
# ingest.notification.email = example@mail.com
ingest.notification.when_failed = false

##########################################################################
# RODA objects PREMIS event settings
#
# Usage:
#
# * event.create.all: True | False
#		Creates PREMIS events for all possible events on the SIP remove plugin
#
# Status: in use
##########################################################################
#event.create.all = True

##########################################################################
# Download disseminator
##########################################################################
core.download.disseminator.id = RepresentationDownload

##########################################################################
# Preservation event type value redefinition settings
#
# Usage:
# * core.preservation_event_type: <String>
#		Set the name of the event to associate to a DIP creation event
#
# Status: in use
##########################################################################
#core.preservation_event_type.DISSEMINATION = creation


##########################################################################
# Representation types list
#
# Usage:
# * core.representation_type.controlled_vocabulary: <boolean>
#		Indicates if the representation type is a controlled vocabulary
# * core.representation_type.value: [<String>]
#		Set all the possible values for representation type
#
# Status: in use
##########################################################################
core.representation_type.controlled_vocabulary: false
core.representation_type.value: MIXED
core.representation_type.value: GeoRasterGeoTiff
core.representation_type.value: GeoVectorXML
core.representation_type.value: MOREQ
core.representation_type.value: SIARD
core.representation_type.value: SIARD2
core.representation_type.value: SIARDDK
core.representation_type.value: SMURF
core.representation_type.value: SMURFERMS
core.representation_type.value: SMURFSFSB
core.representation_type.value: OTHER

##########################################################################
# AIP types list
#
# Usage:
# * core.aip_type.controlled_vocabulary: <boolean>
#		Indicates if the AIP type is a controlled vocabulary
# * core.AIP_type.value: [<String>]
#		Set all the possible values for AIP type
#
# Status: in use
##########################################################################
core.aip_type.controlled_vocabulary: false
core.aip_type.value: MIXED

##########################################################################
# Iterable index result settings
#
# Status: in use
##########################################################################
core.index_result.page_size: 1000
core.index_result.retries: 100
core.index_result.sleep: 10000

##########################################################################
# Repository preservation event user and group permissions
#
# Status: in use
##########################################################################
core.permission.repository_events.user: admin
core.permission.repository_events.group: administrators
#core.permission.repository_events.group: users


##########################################################################
# Disposal bin resources settings
#
# This is the folder that contains all the records that were destroyed via
# a disposal schedule
#
#
# Status: in use
##########################################################################
disposal_bin.folder = disposal-bin


##########################################################################
# Disposal confirmation report jq command
#
##########################################################################
core.confirmation.generate.report.command = jq -n --slurpfile metadata {{metadataFile}} --slurpfile aips {{aipsFile}} --slurpfile schedules {{schedulesFile}} --slurpfile holds {{holdsFile}} {metadata:$metadata[0],aips:$aips,schedules:$schedules,holds:$holds}

##########################################################################
# Primary/Replica action logs management
# Logs synchronization between RODA instances
#
# Status: in use
##########################################################################
#core.action_logs.primary.user = admin
#core.action_logs.primary.pass = roda
#core.action_logs.primary.url = http://localhost:8080
#core.action_logs.primary.resource = /api/v1/log_entries
#core.action_logs.replica.write.solr = true


##########################################################################
# Protocol general settings
#
# Status: in use
##########################################################################
core.protocols.internal.package = org.roda.core.protocols.protocols
core.protocols.internal.take_precedence_over_external = true
core.protocols.external.scheduler.interval = 30

##########################################################################
# RODA Local/Central Management
# Synchronization between Local and Central instances
#
# Status: in use
##########################################################################
#core.synchronization.bundle.path = data/synchronization/bundle

##########################################################################
# Type of actions when synchronizing roda-central with roda-local
# after requesting for execution of preservation actions
#
# Usage:
# core.synchronization.preservationActionExecution.type: <APPROVAL | SCHEDULE>
#
# Status: in use
##########################################################################
core.synchronization.preservationActionExecution.type=APPROVAL

##########################################################################
# Synchronization schedule details
# Crontab expression
##########################################################################
core.synchronization.scheduleInfo=0 0 * * *

##########################################################################
# If true the AIPs will be locked when a user is editing the descriptive
# metadata disallowing any other user to edit the descriptive metadata
#
# Usage:
# core.lock.aip.toEdit: <true | false>
#
# Status: in use
##########################################################################
core.aip.lockToEdit=false

##########################################################################
# User and group permissions regarding creations of aip
# It is possible to change how permissions are granted
# to users and groups.
##########################################################################
# Direct creator permissions
#core.aip.default_permissions.creator.permission[] = CREATE
#core.aip.default_permissions.creator.permission[] = UPDATE
#core.aip.default_permissions.creator.permission[] = READ

# Admin users or groups so AIPs can be administered
#core.aip.default_permissions.admin.user[] = admin
#core.aip.default_permissions.admin.group[] = administrators

#core.aip.default_permissions.admin.group[].administrators.permission[] = READ
#core.aip.default_permissions.admin.group[].administrators.permission[] = UPDATE
#core.aip.default_permissions.admin.group[].administrators.permission[] = CREATE
#core.aip.default_permissions.admin.group[].administrators.permission[] = GRANT
#core.aip.default_permissions.admin.group[].administrators.permission[] = DELETE

# Additional non super group permissions
#core.aip.default_permissions.group[] = archivists
#core.aip.default_permissions.group[] = producers
#core.aip.default_permissions.group[] = guests

#core.aip.default_permissions.group[].archivists.permission[] = READ
#core.aip.default_permissions.group[].archivists.permission[] = UPDATE
#core.aip.default_permissions.group[].archivists.permission[] = CREATE

#core.aip.default_permissions.group[].producers.permission[] = READ

#core.aip.default_permissions.group[].guests.permission[] = READ

# Intersect creator groups with the configuration groups
#core.aip.default_permissions.intersect_groups = true

# System expects a minimum set of direct or indirect permissions for the creator
core.aip.default_permissions.creator.minimum.permissions[] = UPDATE
core.aip.default_permissions.creator.minimum.permissions[] = READ

# Default permissions for the old behaviour
core.aip.default_permissions.creator.permission[] = READ
core.aip.default_permissions.creator.permission[] = CREATE
core.aip.default_permissions.creator.permission[] = UPDATE
core.aip.default_permissions.creator.permission[] = DELETE
core.aip.default_permissions.creator.permission[] = GRANT

##########################################################################
# User registration settings
#
##########################################################################
core.user_registration.disabled = false


##########################################################################
# Plugins certificates setting
#
##########################################################################
core.plugins.external.certificates.opt-in = true
# core.plugins.external.certificates.custom.truststore.enable = false
# core.plugins.external.certificates.custom.truststore.type = PKCS12
# core.plugins.external.certificates.custom.truststore.name = custom-truststore.p12
# core.plugins.external.certificates.custom.truststore.pass = changeit